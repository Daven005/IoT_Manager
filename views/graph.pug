mixin hour(defaultHour)
  - if (typeof defaultHour == 'undefined') defaultHour = 0
  select(name="startHour")
    - for (i=0; i<24; i++) {
      option(value=i selected=defaultHour==i) #{i}
    - }

doctype html
head
  title Sensors Graph
  include header
  script(src='/jq/jquery-ui.min.js')
  script(src="/jq/jquery.jqplot.min.js")
  script(src="//cdnjs.cloudflare.com/ajax/libs/jqPlot/1.0.8/plugins/jqplot.dateAxisRenderer.min.js")
  script(src="//cdnjs.cloudflare.com/ajax/libs/jqPlot/1.0.8/plugins/jqplot.cursor.min.js")
  script(src="//cdnjs.cloudflare.com/ajax/libs/jqPlot/1.0.8/plugins/jqplot.barRenderer.min.js")
  script(src="//cdnjs.cloudflare.com/ajax/libs/jqPlot/1.0.8/plugins/jqplot.canvasTextRenderer.min.js")
  script(src="//cdnjs.cloudflare.com/ajax/libs/jqPlot/1.0.8/plugins/jqplot.canvasAxisTickRenderer.min.js")
  script(src="/jq/plugins/jqplot.highlighter.js")
  script(src="//cdnjs.cloudflare.com/ajax/libs/selectize.js/0.8.5/js/standalone/selectize.min.js")
  script(src="/jq/plugins/jqplot.canvasOverlay.js")
  link(rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css")
  link(rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/jqPlot/1.0.8/jquery.jqplot.min.css")
  link(rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/selectize.js/0.8.5/css/selectize.default.css")
  script(src='/views/graph.js')

  style.
    table {border-collapse: collapse; border:1px solid gray; text-align: center;}
    td {padding: 2px; border:1px solid gray;}
    input {text-align: center;}
    .left {float:left; padding: 5px; vertical-align: bottom; }
    div.ui-datepicker {font-size: 70%;}
    div.outer {min-height: 150px; position: relative;}
    div.bottom {position: absolute; bottom: 0px;}
    div.clear {clear: both;}
    div#chart {width: 600px; height: 600px;}
    div.error {font-color: red}
  script(type='text/javascript').
    var graphData; // For doing sums
    var sel = 0; // select which data
    $(() => {
      try {
        $("#clearSel").click(function(){ 
          $('input:checkbox').removeAttr('checked'); 
        }); 
        $("#date").datepicker({defaultDate: "-1w",changeMonth: true, maxDate: "0D", dateFormat:"yy-mm-dd"});
        $(".sensorList tr:not(.accordion)").hide();
        $(".sensorList tr:first-child").show();    
        $(".sensorList tr input:checked").parent().parent().show();    
        $(".sensorList tr.accordion").click(toggleSelected);

        var sel = 0;
        var d = '!{data}'
        if (d) {
          - console.log('setupGraph', !{JSON.stringify(settings)})
          setupGraph(d, !{graphLabels}, !{graphTypes}, !{sensorIDs}, !{JSON.stringify(settings)}, 'Hollies data');
        }
      } catch(e) { 
        alert(e); }
      }
    ); 
body
  #menu
  .main
    h2 Sensors Graph
    if err
      .error
        != err
    div `#{JSON.stringify(sql)}`
    form(action='/graph',method='get')
      div
        div.left
          h3 Select Sensors
          table(style="background-color: #e0e0e0" class="sensorList")
            thead
              each val, index in sensors[0]
                case index
                  when "Location"
                  when "DeviceName"
                  when "SensorName"
                  when "SensorType"
                    th=index
              th="On/Off/Smooth/Negate"
            tbody
              - var idx = 0
              - var lastDeviceID = ""
              - let onChecked, offChecked, smoothChecked, negateChecked
              each val, i in sensors
                if lastDeviceID != sensors[i].DeviceID
                  - lastDeviceID = sensors[i].DeviceID
                  tr(style="background-color: #c0c0c0" class="accordion")
                    td=sensors[i].Location
                    td=sensors[i].DeviceName
                    td(colspan="9" class="showSelected")="Selected"
                tr
                  each val, j in sensors[i]
                    case j
                      when "Location"
                      when "DeviceName"
                      when "SensorName"
                      when "SensorType"
                        td=val
                  td
                    - onChecked = smoothChecked = negateChecked = false
                    each val, k in settings.selectedRows
                      if val.DeviceID == sensors[i].DeviceID && val.SensorID == sensors[i].SensorID
                        - console.log(`g${JSON.stringify(val)}`)
                        if val.negate
                            - negateChecked = true
                        if val.smooth
                            - smoothChecked = true
                        else 
                            - onChecked = true

                    input(type="radio" value="On" name=`row-${sensors[i].DeviceID}/${sensors[i].SensorID}` checked=onChecked)
                    input(type="radio" value="Off" name=`row-${sensors[i].DeviceID}/${sensors[i].SensorID}`)
                    input(type="radio" value="Smooth" name=`row-${sensors[i].DeviceID}/${sensors[i].SensorID}` checked=smoothChecked)
                    input(type="checkbox" value="Negate" name=`row-${sensors[i].DeviceID}/${sensors[i].SensorID}` checked=negateChecked)
                - idx++
        div.left
          h3 Date
          input(type="text" name="date" id="date" value=settings.date size="10")
          br
          br
          span Time: 
          +hour(parseInt(settings.startHour))
          br
          br
          div
            input(type="button" id="clearSel" value="Clear Sel")
        div.left
          h3 Duration
          input(type="radio" name="days" value="1" checked=(typeof settings.duration == 'undefined' || settings.duration==1))
          |1<br/>
          each val in [2, 3, 4, 5]
            input(type="radio" name="days" value=val checked=settings.duration==val)
            |#{val}<br/>
  
        div.left.outer
          div.left.bottom
            input(type="submit" name="Action" value="Select")
            br
            br
            div
              input(type="text" name="file")
              input(type="submit" name="Action" value="Save As")
  div.clear#chart1(style='color:red' oncontextmenu='return false;')
  div.left#series 0
  div.left#coord1 0
  div.left#coord2 1
  div.left
    input(type="button" value="Sum" onclick="$('#sum').html(doSum(parseInt($('#series').html()), parseInt($('#coord1').html()), parseInt($('#coord2').html())));")
  div.left =
  divdiv.left#sum  
